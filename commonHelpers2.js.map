{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('button');\nconst date = document.querySelector('#datetime-picker');\nconst elements = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\nconst currentDate = new Date().getTime();\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    if (selectedDates[0] <= currentDate) {\n      button.disabled = true;\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        position: 'center',\n      });\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nbutton.disabled = true;\n\nflatpickr('#datetime-picker', options);\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  date.disabled = true;\n  const interval = setInterval(() => {\n    let diffirentDate = new Date(date.value) - Date.now();\n    const { days, hours, minutes, seconds } = convertMs(diffirentDate);\n    elements.days.textContent = addLeadingZero(days);\n    elements.hours.textContent = addLeadingZero(hours);\n    elements.minutes.textContent = addLeadingZero(minutes);\n    elements.seconds.textContent = addLeadingZero(seconds);\n    if (diffirentDate < 1000) {\n      clearInterval(interval);\n      date.disabled = false;\n    }\n  }, 1000);\n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  const valueToString = String(value);\n\n  return valueToString.padStart(2, '0');\n}\n"],"names":["button","date","elements","currentDate","options","selectedDates","iziToast","flatpickr","interval","diffirentDate","days","hours","minutes","seconds","convertMs","addLeadingZero","ms","value"],"mappings":"0IAKA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAO,SAAS,cAAc,kBAAkB,EAChDC,EAAW,CACf,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EACMC,EAAc,IAAI,OAAO,UACzBC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACjBA,EAAc,IAAMF,GACtBH,EAAO,SAAW,GAClBM,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,QAClB,CAAO,GAEDN,EAAO,SAAW,EAErB,CACH,EAEAA,EAAO,SAAW,GAElBO,EAAU,mBAAoBH,CAAO,EAErCJ,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBC,EAAK,SAAW,GAChB,MAAMO,EAAW,YAAY,IAAM,CACjC,IAAIC,EAAgB,IAAI,KAAKR,EAAK,KAAK,EAAI,KAAK,MAChD,KAAM,CAAE,KAAAS,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAa,EACjEP,EAAS,KAAK,YAAca,EAAeL,CAAI,EAC/CR,EAAS,MAAM,YAAca,EAAeJ,CAAK,EACjDT,EAAS,QAAQ,YAAca,EAAeH,CAAO,EACrDV,EAAS,QAAQ,YAAca,EAAeF,CAAO,EACjDJ,EAAgB,MAClB,cAAcD,CAAQ,EACtBP,EAAK,SAAW,GAEnB,EAAE,GAAI,CACT,CAAC,EAED,SAASa,EAAUE,EAAI,CAQrB,MAAMN,EAAO,KAAK,MAAMM,EAAK,KAAG,EAE1BL,EAAQ,KAAK,MAAOK,EAAK,MAAO,IAAI,EAEpCJ,EAAU,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,EAEjDH,EAAU,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeE,EAAO,CAG7B,OAFsB,OAAOA,CAAK,EAEb,SAAS,EAAG,GAAG,CACtC"}